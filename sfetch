
#       __      _       _
#  ___ / _| ___| |_ ___| |__
# / __| |_ / _ \ __/ __| '_ \
# \__ \  _|  __/ || (__| | | |
# |___/_|  \___|\__\___|_| |_|
# speedie's fetch
############################################################
# Settings

# Label/Icons
kernelicon="KERNEL:"
osicon="OS:"
shellicon="SHELL:"
pkgicon="PACKAGES:"
cpuicon="CPU:"
initicon="INIT:"
usedramicon="USED:"
ramicon="RAM:"

# Mac OS X/OS X/macOS Label/Icons
macicon="MAC:"

##############################
# Code, probably don't edit.

# Get the OS
if [[ -f "/etc/os-release" ]]; then
    os="$(cat /etc/os-release)" # Get the OS on Linux
elif [[ -f "/System/Library/CoreServices/SystemVersion.plist" ]]; then
	mac="$(cat /System/Library/CoreServices/SystemVersion.plist)" && macmodel="$(sysctl hw.model | sed 's/hw.model: //')" # Get the OS (macOS)
fi

# Check what init system the user is using.
if [[ -f "/lib/systemd/systemd" ]]; then
	init="systemd"
elif [[ -f "/sbin/openrc" ]]; then
	init="OpenRC"
elif [[ -f "/usr/bin/runit" ]]; then
	init="runit"
elif [[ -f "/usr/bin/s6-rc" ]]; then
	init="s6"
elif [[ -f "/etc/systemd/user.conf" ]]; then
        init="systemd"
fi

# Check what distro is used.
if [[ $os =~ "Gentoo" ]]; then
	os="Gentoo Linux" && art="Gentoo"
elif [[ $os =~ "Funtoo" ]]; then
	os="Funtoo Linux" && art="Funtoo"
elif [[ $os =~ "Arch" ]]; then
	os="Arch Linux" && art="Arch"
elif [[ $os =~ "Debian" ]]; then
	os="Debian Linux" && art="Debian"
elif [[ $os =~ "Pear" ]]; then 
	os="PearOS Linux" && art="Trash" # Trash can for PearOS
elif [[ $os =~ "Ubuntu" ]]; then
	os="Ubuntu Linux" && art="Debian" # No ASCII art for Ubuntu yet, using Debian art
elif [[ $os =~ "Fedora" ]]; then
	os="Fedora Linux" && art="Fedora"
elif [[ $os =~ "Cutefish" ]]; then
	os="CuteFish OS Linux" && art="Trash" # Trash can for Cutefish OS
elif [[ $os =~ "Manjaro" ]]; then
        os="Manjarno Linux" && art="Manjaro"
elif [[ $os =~ "void" ]]; then
        os="Void Linux" && art="Void"
elif [[ $os =~ "KDE neon" ]]; then
        os="KDE Neon" && art="Debian"
elif [[ $os =~ "nixos" ]]; then
        os="NixOS" && art="Linux"
fi

# Mac OS X distributions
if [[ $mac =~ "081" ]]; then
         os="Project 081" && art="Project 081" && mac=""
elif [[ $mac =~ "Niresh" ]]; then
         os="Niresh" && art="iTrash" && mac=""
elif [[ $mac =~ "Deneb" ]]; then
         os="iDeneb" && art="iTrash" && mac=""
elif [[ $mac =~ "Zone" ]]; then
         os="Niresh" && art="iTrash" && mac=""
elif [[ $mac =~ "atk" ]]; then
         os="iAtkos" && art="iTrash" && mac=""
elif [[ $mac =~ "JaS" ]]; then
         os="JaS" && art="iTrash" && mac=""
elif [[ $mac =~ "osx86" ]]; then
         os="OSx86" && art="iTrash" && mac=""
fi

# Official Mac OS X versions
if [[ $mac =~ "081" ]]; then
         os="Project 081" && art="Project 081" && mac=""
elif [[ $mac =~ "10.10" ]]; then
         os="OS X 10.10 Yosemite" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.11" ]]; then
         os="OS X 10.11 El Capitan" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.12" ]]; then
         os="macOS 10.12 Sierra" && art="macOS" && mac=""
elif [[ $mac =~ "10.13" ]]; then
         os="macOS 10.13 High Siera" && art="macOS" && mac=""
elif [[ $mac =~ "10.14" ]]; then
         os="macOS 10.14 Mojave" && art="macOS" && mac=""
elif [[ $mac =~ "10.15" ]]; then
         os="macOS 10.15 Catalina" && art="macOS" && mac=""
elif [[ $mac =~ "10.0" ]]; then
         os="Mac OS X 10.0 Cheetah" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.1" ]]; then
         os="Mac OS X 10.1 Puma" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.2" ]]; then
         os="Mac OS X 10.2 Jaguar" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.3" ]]; then
         os="Mac OS X 10.3 Panther" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.4" ]]; then
         os="Mac OS X 10.4 Tiger" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.5" ]]; then
         os="Mac OS X 10.5 Leopard" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.6" ]]; then
         os="Mac OS X 10.6 Snow Leopard" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.7" ]]; then
         os="Mac OS X 10.7 Lion" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.8" ]]; then
         os="OS X 10.8 Mountain Lion" && art="Mac OS X" && mac=""
elif [[ $mac =~ "10.9" ]]; then
         os="OS X 10.9 Mavericks" && art="Mac OS X" && mac=""
elif [[ $mac =~ "11." ]]; then
         os="macOS 11 Big Sur" && art="macOS" && mac=""
elif [[ $mac =~ "12." ]]; then
         os="macOS 12 Monterey" && art="macOS" && mac=""
elif [[ $mac =~ "Mac OS X" ]]; then
         os="Mac OS X " && art="Mac OS X" && mac=""
fi

# If the distro is not any of the above
if [[ $os =~ "NAME" ]]; then
	 os="Linux" && art="Linux" # Linux is the "generic" art
fi

# Base
user="$(whoami)" # whoami returns the user who runs the command

if [[ -f "/etc/hostname" ]]; then
    host="$(cat /etc/hostname)"
else
    host="$(hostname)"
fi

# Fallback
if [[ "$host" = "" ]]; then
    host="$(uname -n)"
elif [[ "$host" = "" ]]; then
    host="$(cat /proc/sys/kernel/hostname)"
elif [[ "$host" = "" ]]; then
    host="$(hostnamectl --static)"
fi

# Data
kernel="$(uname -sr)" # Get kernel version
shell="$(basename "${SHELL}")"

if [[ -f "/proc/meminfo" ]]; then
totalram="$(cat /proc/meminfo | grep -i 'memtotal' | grep -o '[[:digit:]]*' | awk '{$1=$1/1024; print $1,"MB";}')"
usedram="$(cat /proc/meminfo | grep -i 'Active:' | grep -o '[[:digit:]]*' | awk '{$1=$1/1024; print $1,"MB";}' | awk 'NR!=2')"
fi

if [[ -f "/System/Library/CoreServices/SystemVersion.plist" ]]; then
totalrammac="$(sysctl hw.memsize | grep -o '[[:digit:]]*' | awk '{$1=$1/1024; print $1,"MB";}')"
cpumac="$(sysctl -n machdep.cpu.brand_string)"
fi

if [[ -f "/usr/bin/lscpu" ]]; then
	cpu="$(lscpu | sed -nr '/Model name/ s/.*:\s*(.*) @ .*/\1/p')"
else
	cpu="$(uname -p)" # Failsafe
fi

if [[ -f "/etc/nix/nix.conf" ]]; then
        cpu="$(lscpu | sed -nr '/Model name/ s/.*:\s*(.*) @ .*/\1/p')" # I hate you NixOS..
fi

if [[ -f "/usr/bin/pacman" ]]; then
        pkg="$(pacman -Q | wc --lines)" # For Arch based distributions
elif [[ -f "/etc/portage/make.conf" ]]; then
        pkg="$(ls -d /var/db/pkg/*/* | wc --lines)" # For Gentoo based distributions
elif [[ -f "/usr/bin/dpkg" ]]; then
        pkg="$(dpkg --get-selections | wc --lines)" # For Debian based distributions
elif [[ -f "/usr/bin/rpm" ]]; then
        pkg="$(rpm -qa | wc --lines)" # For Red Hat/Fedora based distributions
elif [[ -f "/usr/bin/xbps-query" ]]; then
        pkg="$(xbps-query --list-pkgs | wc --lines)" # For Void based distributions
elif [[ -f "/etc/nix/nix.conf" ]]; then
        pkg="$(ls /run/current-system/sw/bin | wc --lines)" # For NixOS based distributions
fi

if [[ "$(whoami)" = "root" ]]; then
        tput setaf 1; echo "NOTE: Running a fetch script as root is stupid"
fi

#os="PearOS" # For testing only
#art="Trash" # For testing only
#tput setaf 3; echo $user@$host" # For testing only

# Display everything to the user!
# NOTE: Ascii must be 8 lines in height!

# Gentoo based distributions
if [[ $art = "Gentoo" ]]; then
tput setaf 3; echo "                 $user@$host"
tput setaf 5; echo "    dSSSSSb.     $osicon $(tput sgr0)       $os"
tput setaf 5; echo " .dSSSSSSSSSb.   $kernelicon $(tput sgr0)   $kernel"
tput setaf 5; echo " SSSS( )SSSSSSb  $shellicon $(tput sgr0)    $shell"
tput setaf 5; echo " QSSSSSSSSSSSSSb $pkgicon $(tput sgr0) $pkg"
tput setaf 5; echo "   dSSSSSSSSSSP  $cpuicon $(tput sgr0)      $cpu"
tput setaf 5; echo "  dSSSSSSSSSP    $ramicon $(tput sgr0)      $totalram" 
tput setaf 5; echo " SSSSSSSSSSP     $usedramicon $(tput sgr0)     $usedram "
tput setaf 5; echo "  QSSSSSSP       $initicon $(tput sgr0)     $init" && exit 0
fi

if [[ $art =~ "Funtoo" ]]; then
tput setaf 3; echo "                       $user@$host"
tput setaf 5; echo "   __             _    $osicon $(tput sgr0)       $os"
tput setaf 5; echo "  / _|_   _ _ __ | |_  $kernelicon $(tput sgr0)   $kernel"
tput setaf 5; echo " | |_| | | | '_ \| __| $shellicon $(tput sgr0)    $shell"
tput setaf 5; echo " |  _| |_| | | | | |_  $pkgicon $(tput sgr0) $pkg "
tput setaf 5; echo " |_|  \__,_|_| |_|\__| $cpuicon $(tput sgr0)      $cpu"
tput setaf 5; echo "                       $ramicon $(tput sgr0)      $totalram"
tput setaf 5; echo "                       $usedramicon $(tput sgr0)     $usedram"
tput setaf 5; echo "                       $initicon $(tput sgr0)     $init " && exit 0
fi

# Arch based distributions
if [[ $art =~ "Arch" ]]; then
tput setaf 3; echo "                 $user@$host"
tput setaf 6; echo "        .        $osicon $(tput sgr0)         $os"
tput setaf 6; echo "       /#\       $kernelicon $(tput sgr0)     $kernel"
tput setaf 6; echo "      /###\      $shellicon $(tput sgr0)      $shell"
tput setaf 6; echo "     /p^###\     $pkgicon $(tput sgr0)   $pkg"
tput setaf 6; echo "    /##P^q##\    $cpuicon $(tput sgr0)        $cpu"
tput setaf 6; echo "   /##(   )##\   $ramicon $(tput sgr0)        $totalram"
tput setaf 6; echo "  /###q#    ,^\  $usedramicon $(tput sgr0)       $usedram"
tput setaf 6; echo " /P^         ^q\ $initicon $(tput sgr0)       $init" && exit 0
fi

if [[ $art =~ "Manjaro" ]]; then
tput setaf 3; echo "                   $user@$host"
tput setaf 10; echo " ZZZZZZZZZZZ ZZZZZ $osicon $(tput sgr0)       $os"
tput setaf 10; echo " ZZZZZZZZZZZ ZZZZZ $kernelicon $(tput sgr0)   $kernel"
tput setaf 10; echo " ZZZZZ zzzzz ZZZZZ $shellicon $(tput sgr0)    $shell"
tput setaf 10; echo " ZZZZZ ZZZZZ ZZZZZ $pkgicon $(tput sgr0) $pkg "
tput setaf 10; echo " ZZZZZ ZZZZZ ZZZZZ $cpuicon $(tput sgr0)      $cpu"
tput setaf 10; echo " ZZZZZ ZZZZZ ZZZZZ $ramicon $(tput sgr0)      $totalram"
tput setaf 10; echo " ZZZZZ ZZZZZ ZZZZZ $usedramicon $(tput sgr0)     $usedram"
tput setaf 10; echo " ZZZZZ ZZZZZ ZZZZZ $initicon $(tput sgr0)     $init " && exit 0
fi

# Misc
if [[ $art = "Trash" ]]; then
tput setaf 3; echo "             $user@$host"
tput setaf 5; echo "  ____n____  $osicon $(tput sgr0)       $os"
tput setaf 5; echo " /         \ $kernelicon $(tput sgr0)   $kernel"
tput setaf 5; echo " -| | | | |- $shellicon $(tput sgr0)    $shell"
tput setaf 5; echo "  | | | | |  $pkgicon $(tput sgr0) $pkg "
tput setaf 5; echo "  | | | | |  $cpuicon $(tput sgr0)      $cpu"
tput setaf 5; echo "  | | | | |  $ramicon $(tput sgr0)      $totalram"
tput setaf 5; echo "  | | | | |  $usedramicon $(tput sgr0)     $usedram"
tput setaf 5; echo "  \-------/  $initicon $(tput sgr0)     $init " && exit 0
fi

# Void based distributions
if [[ $art =~ "Void" ]]; then
tput setaf 3; echo "                         $user@$host"
tput setaf 2; echo "                         $osicon $(tput sgr0)       $os"
tput setaf 2; echo " __     _____ ___ ____   $kernelicon $(tput sgr0)   $kernel"
tput setaf 2; echo " \ \   / / _ \_ _|  _ \  $shellicon $(tput sgr0)    $shell"
tput setaf 2; echo "  \ \ / / | | | || | | | $pkgicon $(tput sgr0) $pkg "
tput setaf 2; echo "   \ V /| |_| | || |_| | $cpuicon $(tput sgr0)      $cpu"
tput setaf 2; echo "    \_/  \___/___|____/  $ramicon $(tput sgr0)      $totalram"
tput setaf 2; echo "                         $usedramicon $(tput sgr0)     $usedram"
tput setaf 2; echo "                         $initicon $(tput sgr0)     $init " && exit 0
fi

# Debian based distributions
if [[ $art =~ "Debian" ]]; then
tput setaf 1; echo "      wbbqqqw    $(tput setaf 3)$user@$host"
tput setaf 1; echo "    wgw       gq $osicon $(tput sgr0)       $os"
tput setaf 1; echo "   g     w    g  $kernelicon $(tput sgr0)   $kernel"
tput setaf 1; echo "   ww    w    wa $shellicon $(tput sgr0)    $shell"
tput setaf 1; echo "    b     wwwww  $pkgicon $(tput sgr0) $pkg "
tput setaf 1; echo "    aa           $cpuicon $(tput sgr0)      $cpu"
tput setaf 1; echo "     wae         $ramicon $(tput sgr0)      $totalram"
tput setaf 1; echo "        wa       $usedramicon $(tput sgr0)     $usedram"
tput setaf 1; echo "          aa     $initicon $(tput sgr0)     $init " && exit 0
fi

# Red Hat based distributions
if [[ $art =~ "Fedora" ]]; then
tput setaf 033; echo "    awffa  $(tput setaf 3)$user@$host"
tput setaf 033; echo "   wfw     $osicon $(tput sgr0)       $os"
tput setaf 033; echo "   ffw     $kernelicon $(tput sgr0)   $kernel"
tput setaf 033; echo "   ffw     $shellicon $(tput sgr0)    $shell"
tput setaf 033; echo " abwfwba   $pkgicon $(tput sgr0) $pkg "
tput setaf 033; echo "   wfa     $cpuicon $(tput sgr0)      $cpu"
tput setaf 033; echo "   wfa     $ramicon $(tput sgr0)      $totalram"
tput setaf 033; echo "   wfa     $usedramicon $(tput sgr0)     $usedram"
tput setaf 033; echo "    w      $initicon $(tput sgr0)     $init " && exit 0
fi

# macOS distributions
if [[ $art =~ "Project 081" ]]; then
tput setaf 6; echo  " Y88b   d88P  "
tput setaf 6; echo  "  Y88b d88P   $(tput setaf 3)$user@$host"
tput setaf 6; echo  "   Y88o88P    $osicon $(tput sgr0)     $os"
tput setaf 6; echo  "    Y888P     $kernelicon $(tput sgr0) $kernel"
tput setaf 6; echo  "    d888b     $shellicon $(tput sgr0)  $shell"
tput setaf 6; echo  "   d88888b    $macicon $(tput sgr0)    $macmodel"
tput setaf 6; echo  "  d88P Y88b   $cpuicon $(tput sgr0)    $cpumac"
tput setaf 6; echo  " d88P   Y88b  "
tput setaf 6; echo  "              $(tput sgr0) " && exit 0
fi

if [[ $art =~ "Mac OS X" ]]; then
tput setaf 0; echo  " Y88b   d88P  "
tput setaf 0; echo  "  Y88b d88P   $(tput setaf 3)$user@$host"
tput setaf 0; echo  "   Y88o88P    $osicon $(tput sgr0)     $os"
tput setaf 0; echo  "    Y888P     $kernelicon $(tput sgr0) $kernel"
tput setaf 0; echo  "    d888b     $shellicon $(tput sgr0)  $shell"
tput setaf 0; echo  "   d88888b    $macicon $(tput sgr0)    $macmodel"
tput setaf 0; echo  "  d88P Y88b   $cpuicon $(tput sgr0)    $cpumac"
tput setaf 0; echo  " d88P   Y88b  "
tput setaf 0; echo  "              $(tput sgr0) " && exit 0
fi

if [[ $art =~ "macOS" ]]; then
tput sgr0; echo  "  _ __ ___   __ _  ___  "
tput sgr0; echo  " | '_ ' _ \ / _' |/ __| $(tput setaf 3)$user@$host"
tput sgr0; echo  " | | | | | | (_| | (__  $osicon $(tput sgr0)     $os"
tput sgr0; echo  " |_| |_|_|_|\__,_|\___| $kernelicon $(tput sgr0) $kernel"
tput sgr0; echo  "      / _ \/ ___|       $shellicon $(tput sgr0)  $shell"
tput sgr0; echo  "     | | | \___ \       $macicon $(tput sgr0)    $macmodel"
tput sgr0; echo  "     | |_| |___) |      $cpuicon $(tput sgr0)    $cpumac"
tput sgr0; echo  "      \___/|____/       "
tput sgr0; echo "" && exit 0
fi

# Trash for Mac OS X distros
if [[ $art = "iTrash" ]]; then
tput setaf 3; echo "             "
tput setaf 5; echo "  ____n____  $(tput setaf 3)$user@$host"
tput setaf 5; echo " /         \ $osicon $(tput sgr0)     $os"
tput setaf 5; echo " -| | | | |- $kernelicon $(tput sgr0) $kernel"
tput setaf 5; echo "  | | | | |  $shellicon $(tput sgr0)  $shell"
tput setaf 5; echo "  | | | | |  $macicon $(tput sgr0)    $macmodel"
tput setaf 5; echo "  | | | | |  $cpuicon $(tput sgr0)    $cpumac"
tput setaf 5; echo "  | | | | |  "
tput setaf 5; echo "  \-------/  $(tput setaf 1)NOTE: You should not use distros. https://dortania.github.io/OpenCore-Install-Guide" && exit 0
fi

# Generic art if yours is none of the above
tput setaf 3; echo "             $user@$host"
tput setaf 3; echo "     .--.    $osicon $(tput sgr0)       $os"
tput setaf 3; echo "    |o_o |   $kernelicon $(tput sgr0)   $kernel" 
tput setaf 3; echo "    |:_/ |   $shellicon $(tput sgr0)    $shell"
tput setaf 3; echo "   //   \ \  $pkgicon $(tput sgr0) $pkg"
tput setaf 3; echo "  (|     | ) $cpuicon $(tput sgr0)      $cpu"
tput setaf 3; echo " /'|_   _/'\ $ramicon $(tput sgr0)      $totalram"
tput setaf 3; echo " \___)=(___/ $usedramicon $(tput sgr0)     $usedram"
tput setaf 3; echo "             $initicon $(tput sgr0)     $init"

exit 0


